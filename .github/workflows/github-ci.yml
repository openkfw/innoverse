name: Test/Build CI
on:
  push:
    branches:
      - main
      - release
  pull_request:
  release:
    types: [published]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-22.04
    continue-on-error: true
    strategy:
      matrix:
        node-version: [18.x]
        project: [app]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Run lint
        uses: ./.github/workflows/lint

  audit:
    runs-on: ubuntu-22.04
    needs: [lint]
    strategy:
      matrix:
        node-version: [18.x]
        project: [app, strapi]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Run audit
        uses: ./.github/workflows/audit

  build:
    runs-on: ubuntu-22.04
    needs: [lint, audit]
    strategy:
      matrix:
        project: [app, strapi]
        include:
          - project: app
            image_name: kfwopensource/innoverse-next
          - project: strapi
            image_name: kfwopensource/innoverse-strapi
    defaults:
      run:
        working-directory: ${{ matrix.project }}

    env:
      GITHUB_PR_NUMBER: ${{ github.event.number}}
      GITHUB_BASE_REF: ${{ github.base_ref}}
      GITHUB_HEAD_REF: ${{ github.head_ref}}
      PRIVATE_REGISTRY_URL: ${{ secrets.PRIVATE_REGISTRY_URL}}
      PRIVATE_REGISTRY_USERNAME: ${{ secrets.PRIVATE_REGISTRY_USERNAME}}
      PRIVATE_REGISTRY_PASSWORD: ${{ secrets.PRIVATE_REGISTRY_PASSWORD}}

      PRIVATE_PROD_REGISTRY_URL: ${{ secrets.PRIVATE_PROD_REGISTRY_URL}}
      PRIVATE_PROD_REGISTRY_USERNAME: ${{ secrets.PRIVATE_PROD_REGISTRY_USERNAME}}
      PRIVATE_PROD_REGISTRY_PASSWORD: ${{ secrets.PRIVATE_PROD_REGISTRY_PASSWORD}}
      BODY_SIZE_LIMIT: ${{ secrets.BODY_SIZE_LIMIT}}

      PUBLIC_REGISTRY_USERNAME: ${{ secrets.PUBLIC_REGISTRY_USERNAME}}
      PUBLIC_REGISTRY_PASSWORD: ${{ secrets.PUBLIC_REGISTRY_PASSWORD}}
      PUBLIC_REGISTRY_URL: docker.io

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-docker-action@v4
      - uses: ./.github/workflows/build

  notification:
    runs-on: ubuntu-22.04
    needs: [lint, audit, build]
    env:
      GITHUB_BASE_REF: ${{ github.base_ref}}
      GITHUB_HEAD_REF: ${{ github.head_ref}}
      GITHUB_PR_NUMBER: ${{ github.event.number}}
      WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}
      WEBHOOK_REF: ${{ secrets.WEBHOOK_REF }}
      WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/notification
